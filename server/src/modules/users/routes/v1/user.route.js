router
  .post(
    "/users/auth/signUp",
    validators.users.signUpPayloadValidation,
    middlewares.validation.request,
    actions.users.auth.signUp
  )
  // .post(
  //   "/users/auth/login",
  //   validators.users.signInPayloadValidation,
  //   middlewares.validation.request,
  //   middlewares.local_passport.authenticate,
  //   actions.users.auth.signIn
  // )
  .post(
    "/users/auth/login",
    validators.users.signInPayloadValidation,
    middlewares.validation.request,
    // middlewares.local_passport.authenticate,
    actions.users.auth.login
  )
  .post(
    "/users/auth/verifyEmail",
    validators.users.emailPayloadValidation,
    middlewares.validation.request,
    actions.users.auth.verifyEmail
  )

  .post(
    "/users/auth/verify-code/:id",
    middlewares.id_validation.validateId,
    validators.users.verifyCodePayloadValidation,
    middlewares.validation.request,
    actions.users.auth.verifyCode
  )
  .post(
    "/users/auth/resend-code/:id",
    validators.users.resendCodePayloadValidation,
    middlewares.validation.request,
    actions.users.auth.resendCode
  )
  .patch(
    "/users/auth/forgot-password",
    validators.users.emailPayloadValidation,
    middlewares.validation.request,
    actions.users.auth.forgotPassword
  )
  .patch(
    "/users/auth/reset-password/:id",
    middlewares.id_validation.validateId,
    validators.users.resetPasswordPayload,
    middlewares.validation.request,
    actions.users.auth.resetPassword
  )
  // List Action
  .get(
    "/users/getAllUsers",
    middlewares.validation.request,
    actions.users.list.getAllUsers
  )
  .get(
    "/users/getUserBySearch/:term",
    middlewares.validation.request,
    actions.users.list.getUserBySearch
  )
  .get(
    "/users/getUserById/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    actions.users.list.getUserById
  )
  .get(
    "/users/getUsersByDisplayName/:name",
    middlewares.validation.request,
    actions.users.list.getUsersByDisplayName
  )
  .get(
    "/users/getUserByCustomURL/:url",
    middlewares.validation.request,
    actions.users.list.getUserByCustomURL
  )
  .post(
    "/users/getUserByDisplayName",
    middlewares.validation.request,
    validators.users.getUserByDisplayNamePayloadValidation,
    actions.users.list.getUserByDisplayName
  )
  .get(
    "/users/getAllUserSpaces/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    actions.users.list.getAllUserSpaces
  )
  .post(
    "/users/getUserSpace/:id",
    middlewares.validation.request,
    validators.users.getUserSpacePayloadValidation,
    actions.users.list.getUserSpace
  )
  .get(
    "/users/getUserByWalletAddress/:wallet_address",
    middlewares.validation.request,
    actions.users.list.getUserByDisplayName
  )
  .get(
    "/users/isVerified/:id",
    middlewares.validation.request,
    middlewares.id_validation.validateId,
    actions.users.list.isVerified
  )
  .get(
    "/users/getSubscriptions/:id",
    middlewares.validation.request,
    middlewares.id_validation.validateId,
    actions.users.list.getSubscriptions
  )
  .get(
    "/users/getSettings/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    actions.users.list.getSettings
  )
  // Update Action
  .put(
    "/users/updateUser/:id",
    middlewares.id_validation.validateId,
    actions.users.update.updateUser
  )
  .put(
    "/users/updateDisplayName/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    validators.users.updateDisplayNamePayloadValidation,
    actions.users.update.updateDisplayName
  )
  .post(
    "/users/addSpace/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    actions.users.update.addSpace
  )
  .get(
    "/users/removeSpace/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    actions.users.update.removeSpace
  )
  .get(
    "/users/removeAllSpaces",
    middlewares.validation.request,
    actions.users.update.removeAllSpaces
  )
  .get(
    "/users/addSubscription/:id",
    middlewares.validation.request,
    actions.users.update.addSubscription
  )
  .get(
    "/users/removeSubscription/:id",
    middlewares.validation.request,
    actions.users.update.removeSubscription
  )
  .get(
    "/users/removeAllSubscriptions",
    middlewares.validation.request,
    actions.users.update.removeAllSubscriptions
  )
  .post(
    "/users/updateSettings",
    middlewares.validation.request,
    actions.users.update.updateSettings
  )
  .get(
    "/users/resetSettings",
    middlewares.validation.request,
    actions.users.update.resetSettings
  );

module.exports = { prefix: "users", router };
