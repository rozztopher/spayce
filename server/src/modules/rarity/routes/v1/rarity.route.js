router
  // Update
  .post(
    "/rarity/createRarity",
    validators.rarity.createRarityPayloadValidation,
    middlewares.validation.request,
    actions.rarity.update.createRarity
  )
  .put(
    "/rarity/updateRarity/:id",
    middlewares.id_validation.validateId,
    validators.rarity.createRarityPayloadValidation,
    middlewares.validation.request,
    actions.rarity.update.updateRarity
  )
  .put(
    "/rarity/setName/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    validators.rarity.setNamePayloadValidation,
    actions.rarity.update.setName
  )
  .put(
    "/rarity/setColour/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    validators.rarity.setColourPayloadValidation,
    actions.rarity.update.setColour
  )
  .put(
    "/rarity/setProbability/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    validators.rarity.setProbabilityPayloadValidation,
    actions.rarity.update.setProbability
  )
  // List
  .get(
    "/rarity/getAllRarities",
    middlewares.validation.request,
    actions.rarity.list.getAllRarities
  )
  .get(
    "/rarity/getAllRaritiesByProbability",
    middlewares.validation.request,
    actions.rarity.list.getAllRaritiesByProbability
  )
  .get(
    "/rarity/getRaritiesByCategory/:cat",
    middlewares.validation.request,
    actions.rarity.list.getRaritiesByCategory
  )
  .get(
    "/rarity/getRaritiyBySubCategory/:cat",
    middlewares.validation.request,
    actions.rarity.list.getRaritiyBySubCategory
  )
  .get(
    "/rarity/getCategory/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    actions.rarity.list.getCategory
  )
  .get(
    "/rarity/getSubCategory/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    actions.rarity.list.getSubCategory
  )
  .get(
    "/rarity/getProbability/:id",
    middlewares.id_validation.validateId,
    middlewares.validation.request,
    actions.rarity.list.getProbability
  );

module.exports = { prefix: "rarity", router };
